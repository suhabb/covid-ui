{"version":3,"sources":["ui-components/vaccination/world/110m.tsv","ui-components/vaccination/world/index.js","d3_graph/vaccination/pie_chart/vaccine-pie-chart.js","d3_graph/vaccination/pie_chart/index.js","data/vaccine-company-data.js","ui-components/vaccination/pie/index.js","data/index.js","ui-components/vaccination/tabular/index.js","d3_graph/vaccination/bar_chart/vaccine-bar-chart.js","d3_graph/vaccination/bar_chart/index.js","ui-components/vaccination/bar/index.js","footer/index.js","ui-components/vaccination/info/index.js","d3_graph/vaccination/area_chart/vaccine-area-chart.js","d3_graph/vaccination/area_chart/index.js","ui-components/vaccination/area/index.js","ui-components/vaccination/index.js","data/bar-test.js","ui-components/testing/test-info/index.js","ui-components/testing/world-test/110m.tsv","data/line-test.js","ui-components/testing/world-test/index.js","ui-components/testing/linear-bar/index.js","ui-components/testing/circular-barplot/index.js","ui-components/testing/donut-chart/index.js","ui-components/testing/lollipop-chart/index.js","ui-components/testing/index.js","ui-components/test/index.js","ui-components/report/index.js","CovidApp.js","index.js"],"names":["projection","geoEqualEarth","scale","translate","WorldView","state","geographies","vaccineSummary","manufacturerSummary","handleCountryClick","countryIndex","iso","countryData","Promise","all","tsv","tsvData","then","data","forEach","item","id","iso_n3","iso_a3","vaccineRequest","vaccine","setState","manufacturerRequest","manufacturer","props","parentCallback","handleOnLoad","vaccineUrl","console","log","axios","get","err","error","manufacturerUrl","fetch","response","status","json","worlddata","feature","objects","countries","features","this","selectAll","remove","tooltip","select","append","attr","width","height","className","viewBox","map","d","i","geoPath","fill","length","stroke","strokeWidth","onMouseOver","onMouseMove","event","classed","html","properties","name","pageX","pageY","onMouseOut","React","Component","PieView","dataset","vaccineCompanies","vaccineCompany","totalVaccinations","push","d3","margin","svg","radius","Math","min","color","range","arc","innerRadius","outerRadius","pie","value","sort","enter","transition","duration","attrTween","endAngle","startAngle","t","size","style","text","PieChart","preProps","Fragment","manufacturerData","undefined","Object","keys","location","Tabular","vaccineDayToDayList","index","num","daily_vaccinations_formatted","daily_vaccinations","toFixed","key","vaccine1","vaccine2","Date","date","country","columns","title","dataIndex","dataSource","scroll","y","numFormatter","BarView","graphWidth","graphHeight","x","domain","paddingInner","paddingOuter","bandwidth","on","call","tickFormat","BarChart","BarChartView","Footer","Layout","FooterView","textAlign","Info","countryVaccine","lastItem","slice","code","iso_code","fallback","src","alt","total_vaccinations","people_fully_vaccinated","AreaView","area_data","max","vaccineData","vaccine_date","xAxis","ticks","yAxis","curve","datum","y0","y1","AreaChart","AreaChartView","Sider","Content","VaccinationView","callbackFunction","backgroundColor","TestInfo","covidTestingData","countryInfo","iso3","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","recoveredPerOneMillion","criticalPerOneMillion","WorldTestView","covidSummary","worldData","timelineData","handleCountryMouseOver","covidRequest","covid","mockData","covidTimelineRequest","timeline","mockLineData","covidUrl","timelineUrl","showToolTip","elem","updated","cases","todayCases","deaths","recovered","active","critical","tests","population","resp","world","scaleExtent","translateExtent","transform","LinearBarChart","worldDataProp","filterDataset","worldObj","a","b","padding","CircularPlotView","countryList","continent","z","myColor","join","DonutChartView","data_ready","entries","outerArc","posA","centroid","posB","posC","midangle","PI","pos","LollipopChartView","covidTimelineData","covidDeathList","TestingView","covidData","Test","class","Header","ReportView","CovidApp","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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b,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,SAEb,CACI,KAAQ,aACR,MAAS,UAGjB,OAAU,CACN,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aACR,MAAS,QAEb,CACI,KAAQ,aA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","file":"static/js/main.070c1eb2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/110m.702ca108.tsv\";","import React from \"react\"\nimport { geoEqualEarth, geoPath } from \"d3-geo\"\nimport axios from 'axios'\nimport { tsv, select, selectAll } from \"d3\"\nimport './world-view.css'\nimport tsvData from './110m.tsv'\nimport { feature } from \"topojson-client\"\n\nconst projection = geoEqualEarth()\n    .scale(160)\n    .translate([800 / 2, 450 / 2])\n\nexport default class WorldView extends React.Component {\n\n    state = {\n        geographies: [],\n        vaccineSummary: {},\n        manufacturerSummary: {}\n    }\n\n    componentDidMount() {\n        fetch(\"https://unpkg.com/world-atlas@2.0.2/countries-110m.json\")\n            .then(response => {\n                if (response.status !== 200) {\n                    console.log(`There was a problem: ${response.status}`)\n                    return\n                }\n                response.json().then(worlddata => {\n                    this.setState({ geographies: feature(worlddata, worlddata.objects.countries).features })\n                })\n            })\n        this.handleOnLoad('GBR');\n    }\n\n\n    handleCountryClick = (countryIndex) => {\n        const countryData = this.state.geographies[countryIndex]\n        let iso;\n        Promise.all([\n            tsv(tsvData),\n        ]).then(data => {\n            data[0].forEach(item => {\n                if (countryData.id === item.iso_n3) {\n                    iso = item.iso_a3;\n                }\n            })\n            const vaccineResponse = this.vaccineRequest(iso)\n            vaccineResponse.then(vaccine => {\n                this.setState({ vaccineSummary: vaccine.data })\n                const manufacturerResponse = this.manufacturerRequest(iso)\n                manufacturerResponse.then(manufacturer => {\n                    this.setState({ manufacturerSummary: manufacturer.data })\n                    this.props.parentCallback(vaccine.data, manufacturer.data);\n                });\n            });\n        });\n    }\n\n    handleOnLoad = (iso) => {\n        const vaccineResponse = this.vaccineRequest(iso)\n        vaccineResponse.then(vaccine => {\n            this.setState({ vaccineSummary: vaccine.data })\n            const manufacturerResponse = this.manufacturerRequest(iso)\n            manufacturerResponse.then(manufacturer => {\n                this.setState({ manufacturerSummary: manufacturer.data })\n                this.props.parentCallback(vaccine.data, manufacturer.data);\n            });\n        });\n    }\n\n    vaccineRequest = (iso) => {\n        try {\n            const vaccineUrl = 'http://localhost:8080/covid-vaccination-service/country/iso-code/' + iso\n            console.log(vaccineUrl)\n            return axios.get(vaccineUrl);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    manufacturerRequest = (iso) => {\n        try {\n            const manufacturerUrl = 'http://localhost:8080/covid-vaccination-service/manufacturer/iso-code/' + iso\n            console.log(manufacturerUrl)\n            return axios.get(manufacturerUrl);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    render() {\n\n        selectAll('.tooltip').remove();\n        const tooltip =\n            select(\".world-map\")\n                .append(\"div\")\n                .attr(\"class\", \"hidden tooltip\");\n        const width = this.props.width;\n        const height = this.props.height;\n        return (\n            <div className='pane'>\n                <div className='header'>World Map</div>\n                <div className=\"world-map\"> </div>\n                <svg width={width} height={height} viewBox=\"0 0 800 450\">\n                    <g className=\"world-view\">\n                        {\n                            this.state.geographies.map((d, i) => (\n                                <path\n                                    id={`path-${i}`}\n                                    key={`path-${i}`}\n                                    d={geoPath().projection(projection)(d)}\n                                    className=\"country\"\n                                    fill={`rgba(38,50,56,${1 / this.state.geographies.length * i})`}\n                                    stroke=\"aliceblue\"\n                                    strokeWidth={0.5}\n                                    onMouseOver={() => this.handleCountryClick(i)}\n                                    onMouseMove={(event) => {\n                                        tooltip\n                                            .classed(\"hidden\", false)\n                                            .html(\n                                                \"<h6>\" +\n                                                d.properties.name\n                                                +\n                                                \"</h6>\"\n                                            )\n                                            .attr(\n                                                \"style\",\n                                                \"left:\" +\n                                                (event.pageX + 15) +\n                                                \"px; top:\" +\n                                                (event.pageY + 20) +\n                                                \"px\"\n                                            );\n                                    }}\n                                    onMouseOut={() => {\n                                        tooltip.classed(\"hidden\", true);\n                                    }}\n\n                                />\n                            ))\n                        }\n                    </g>\n                </svg>\n            </div>\n        )\n    }\n}\n\n\n","import * as d3 from 'd3';\n\nconst PieView = (props) => {\n    const data = props.data;\n    let dataset = [];\n\n    data.vaccineCompanies.forEach(item => {\n        var vaccineCompany = {\n            \"vaccine\": item.vaccine,\n            \"totalVaccinations\": item.totalVaccinations\n        }\n        dataset.push(vaccineCompany)\n    });\n    d3.select('.vaccine-piechart > *').remove();\n    const margin = { top: -90, right: 20, bottom: 90, left: 40 };\n    const width = props.width - margin.left - margin.right;\n    const height = props.height - margin.top - margin.bottom;\n\n    let svg = d3.select('.vaccine-piechart')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + (width / 2 + margin.left) + ',' + (height / 2 + margin.top) + ')');\n\n    let radius = Math.min(width, height) / 2;\n\n    let color = d3.scaleOrdinal()\n        .range(d3['schemeSet3']);\n\n    let arc = d3.arc()\n        .innerRadius(0)\n        .outerRadius(radius);\n\n    let pie = d3.pie()\n        .value(d => d.totalVaccinations)\n        .sort(null);\n\n    const arcMoveEnter = (d) => {\n        var i = d3.interpolate(d.endAngle, d.startAngle)\n        return function (t) {\n            d.startAngle = i(t);\n            return arc(d)\n        }\n    }\n\n    svg.selectAll('path')\n        .data(pie(dataset))\n        .enter()\n        .append('path')\n        .attr('stroke', '#fff')\n        .attr('stroke-width', 1)\n        .attr('fill', function (d, i) {\n            return color(i);\n        })\n        .transition().duration(800)\n        .attrTween('d', arcMoveEnter);\n\n    var size = 20\n    svg.selectAll(\".legend\")\n        .data(pie(dataset))\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", -120)\n        .attr(\"y\", function (d, i) { return 130 + i * (size + 5) }) // 100 is where the first dot appears. 25 is the distance between dots\n        .attr(\"width\", size)\n        .attr(\"height\", size)\n        .style(\"fill\", (d, i) => {\n            return color(i)\n        })\n\n    svg.selectAll(\".legend\")\n        .data(pie(dataset))\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", -120 + size * 1.2)\n        .attr(\"y\", function (d, i) { return 133 + i * (size + 5) + (size / 2) }) // 100 is where the first dot appears. 25 is the distance between dots\n        .style(\"fill\", '#ff')\n        .text(function (d) { return d.data.vaccine })\n        .attr(\"text-anchor\", \"right\")\n        .style(\"alignment-baseline\", \"middle\")\n}\n\nexport default PieView;","import React, { Component } from 'react';\nimport PieView from './vaccine-pie-chart';\n\nexport default class PieChart extends Component {\n\n     componentDidMount() {\n        PieView(this.props);\n    }\n\n    componentDidUpdate(preProps) {\n        PieView(this.props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                   <div className='vaccine-piechart'/>\n            </React.Fragment>\n        )\n    }\n}\n\n","const data =\n{\n    \"location\": \"NA\",\n    \"iso_code\": \"NA\",\n    \"vaccineCompanies\": [\n        {\n            \"date\": \"2021-07-08\",\n            \"vaccine\": \"NA\",\n            \"totalVaccinations\": 0\n        },\n        {\n            \"date\": \"2021-07-08\",\n            \"vaccine\": \"NA\",\n            \"totalVaccinations\": 0\n        },\n        {\n            \"date\": \"2021-07-08\",\n            \"vaccine\": \"NA\",\n            \"totalVaccinations\": 0\n        },\n        {\n            \"date\": \"2021-07-08\",\n            \"vaccine\": \"NA\",\n            \"totalVaccinations\": 0\n        }\n    ]\n}\n\nexport default data;","import React, { Component } from 'react';\nimport './pie-view.css';\nimport PieChart from '../../../d3_graph/vaccination/pie_chart';\nimport data from '../../../data/vaccine-company-data'\n\nexport default class PieView extends Component {\n\n    state = {\n        manufacturerData: this.props.manufacturerData\n    }\n\n    render() {\n        let { manufacturerData } = this.props;\n        if(manufacturerData === undefined || (Object.keys(manufacturerData).length === 0)){\n            manufacturerData = data\n        }\n        const width = 260;\n        const height = 450;\n        return (\n            <div id='pie-view' className='pane'>\n                <div className='header'>Pie Chart : {manufacturerData.location}</div>\n                <PieChart data={manufacturerData} width={width} height={height} />\n            </div>\n        )\n    }\n}","const data =\n{\n    \"country\": \"N/A\",\n    \"iso_code\": \"N/A\",\n    \"data\": [\n        {\n            \"date\": \"N/A\",\n            \"total_vaccinations\": 0,\n            \"people_vaccinated\": 0,\n            \"total_vaccinations_per_hundred\": 0,\n            \"people_vaccinated_per_hundred\": 0,\n            \"daily_vaccinations\": 0,\n            \"daily_vaccinations_per_million\": 0\n        },\n        {\n            \"date\": \"N/A\",\n            \"total_vaccinations\": 0,\n            \"people_vaccinated\": 0,\n            \"total_vaccinations_per_hundred\": 0,\n            \"people_vaccinated_per_hundred\": 0,\n            \"daily_vaccinations\": 0,\n            \"daily_vaccinations_per_million\": 0\n        }\n    ]\n};\n\nexport default data;","import React, { Component } from 'react'\nimport './tabular-view.css'\nimport data from '../../../data'\nimport { Table } from 'antd';\n\nexport default class Tabular extends Component {\n\n\n    render() {\n\n        let { countryData } = this.props;\n        if (countryData === undefined || (Object.keys(countryData).length === 0)) {\n            countryData = data\n        }\n\n        let vaccineDayToDayList = [];\n\n        const numFormatter = (num) => {\n            if (num > 999 ) {\n                return (num / 1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n            } else if (num < 900) {\n                return num; // if value < 1000, nothing to do\n            }\n        }\n\n        countryData.data.forEach((vaccine, index) => {\n            vaccine.daily_vaccinations_formatted = numFormatter(vaccine.daily_vaccinations)\n            vaccine.key = index\n            vaccineDayToDayList.push(vaccine)\n        });\n        vaccineDayToDayList.sort(function (vaccine1, vaccine2) {\n            return new Date(vaccine2.date) - new Date(vaccine1.date);\n        });\n\n\n        const columns = [\n            {\n                title: 'Date',\n                dataIndex: 'date',\n                key: 'date'\n            },\n            {\n                title: 'Daily Vaccinations',\n                dataIndex: 'daily_vaccinations_formatted',\n                key: 'daily_vaccinations'\n            },\n            {\n                title: 'Daily Vaccinations Per Million',\n                dataIndex: 'daily_vaccinations_per_million',\n                key: 'daily_vaccinations_per_million'\n            }\n        ]\n\n        return (\n            <div>\n                <div id='tabular-view' className='pane'>\n                    <div className='header'>Tabular Chart: {countryData.country}</div>\n                    <Table columns={columns} dataSource={vaccineDayToDayList} height={500} scroll={{ y: 283 }} />\n                </div>\n            </div>\n        )\n    }\n}\n\n","import * as d3 from 'd3';\nimport './style.css';\n\nconst BarView = (props) => {\n\n    const data = props.data;\n    let dataset = [];\n    data.vaccineCompanies.forEach(item => {\n        let vaccineCompany = {\n            'vaccine': item.vaccine,\n            'totalVaccinations': item.totalVaccinations\n        }\n        dataset.push(vaccineCompany)\n    });\n\n    d3.select('.vaccine-barchart > *').remove();\n\nvar tooltip = d3.select(\"body\").append(\"div\")\t\n    .attr(\"class\", \"tooltip\")\t\t\t\t\n    .style(\"opacity\", 0);\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 60 };\n    const graphWidth = props.width - margin.left - margin.right;\n    const graphHeight = props.height - margin.top - margin.bottom;\n\n    let svg = d3.select('.vaccine-barchart')\n        .append('svg')\n        .attr('width', graphWidth + margin.left + margin.right)\n        .attr('height', graphHeight + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    let x = d3.scaleBand()\n        .domain(dataset.map(item => item.vaccine))\n        .range([0, graphWidth])\n        .paddingInner(0.5)\n        .paddingOuter(0.5);\n\n    let y = d3.scaleLinear()\n        .domain([0, d3.max(dataset, d => d.totalVaccinations)])\n        .range([graphHeight, 0]);\n\n    svg.selectAll('.bar')\n        .data(dataset)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', d => x(d.vaccine))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.totalVaccinations))\n        .attr('height', d => graphHeight - y(d.totalVaccinations))\n        .on('mouseover', function(event,d) {\t\t\n            tooltip.transition()\t\n             //   .duration(500)\t\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltip.html(\"Total Vaccination:\" + d.totalVaccinations + \"<br/>\")\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on('mouseout', function(d) {\t\t\n            tooltip.transition()\t\t\t\n                .style(\"opacity\", 0);\t\n        });;\n\n    svg.append('g')\n        .attr('transform', `translate(0, ${graphHeight})`)\n        .call(d3.axisBottom(x));\n\n    svg.append('g')\n        .call(d3.axisLeft(y)\n            .tickFormat(d => {\n                return numFormatter(d);\n            }))\n            .append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 0 - margin.left)\n            .attr('x', 0 - (graphHeight / 2))\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', '#141414' )\n            .text('People');\n}\n\nconst numFormatter = (num) => {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(0) + 'M'; // convert to M for number from > 1 million \n    } else if (num < 900) {\n        return num; // if value < 1000, nothing to do\n    }\n}\n\nexport default BarView;","import React, { Component } from 'react';\nimport BarView from './vaccine-bar-chart'\n\nexport default class BarChart extends Component {\n\n    componentDidMount() {\n        BarView(this.props);\n    }\n\n    componentDidUpdate(preProps) {\n        BarView(this.props);\n    }\n \n    render() {\n        return (\n            <div className='vaccine-barchart'/>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport BarChart from '../../../d3_graph/vaccination/bar_chart';\nimport './bar-view.css';\nimport data from '../../../data/vaccine-company-data'\n\nexport default class BarChartView extends Component {\n\n    state = {\n        manufacturerData: this.props.manufacturerData\n    }\n\n    render() {\n        let { manufacturerData } = this.props;\n        if (manufacturerData === undefined || (Object.keys(manufacturerData).length === 0)) {\n            manufacturerData = data\n        }\n        return (\n            <div id='bar-view' className='pane'>\n                <div className='header'>Bar Chart : {manufacturerData.location}</div>\n                <div>\n                    <BarChart data={manufacturerData} width={800} height={450} />\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './footer.css';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nfunction FooterView() {\n    return (\n        <React.Fragment>\n           <Footer style={{ textAlign: 'center' }}>Kcl Covid App</Footer>\n        </React.Fragment>\n    )\n};\n\nexport default FooterView;","import React, { Component } from 'react';\nimport './info.css';\nimport Flag from 'react-world-flags'\nimport data from '../../../data'\n\nexport default class Info extends Component {\n\n    state = {\n        countryVaccine: this.props.countryData\n    }\n\n    render() {\n\n        let { countryData } = this.props;\n        if(countryData === undefined || (Object.keys(countryData).length === 0)){\n            countryData = data\n        }\n        const lastItem= countryData.data.slice(-1)[0]\n      \n        const numFormatter = (num)=> {\n            if(num > 999 && num < 1000000){\n                return (num/1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n            }else if(num > 1000000){\n                return (num/1000000).toFixed(0) + 'M'; // convert to M for number from > 1 million \n            }else if(num < 900){\n                return num; // if value < 1000, nothing to do\n            }\n        }\n    \n        return (\n            <div id='info' className='pane'>\n                <div className='header'>Country:<span> {countryData.country}</span></div>\n                <Flag  width=\"270\" height=\"200\" code={this.props.countryData.iso_code} fallback={ <img src=\"no-image-icon.png\" alt=\"No Flag Available\" height=\"200\" width=\"270\"/>} />\n                <div>\n                    \n                    <div className={'info-view'} >\n                        <div><span>Country:</span> {countryData.country}</div>\n                        <div><span>Date :</span> {lastItem.date}</div>\n                        <div><span>Daily Vaccinations:</span>{numFormatter(lastItem.daily_vaccinations)}</div>\n                        <div><span>Total Vaccinated:</span> {numFormatter(lastItem.total_vaccinations)}</div>\n                        <div><span>People Fully Vaccinated:</span> {numFormatter(lastItem.people_fully_vaccinated)}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import * as d3 from 'd3';\nimport './style.css';\n\nconst AreaView = (props) => {\n\n    const countryData = props.data;\n    let dataset = [];\n    countryData.area_data = [];\n    if (countryData.data.length > 10) {\n        countryData.area_data = countryData.data.slice(Math.max(countryData.data.length - 10, 0))\n    }\n\n    countryData.area_data.forEach(item => {\n        let vaccineData = {\n            'daily_vaccinations': item.daily_vaccinations,\n            'vaccine_date': item.date\n        }\n        dataset.push(vaccineData);\n    });\n    dataset.forEach(function (d) {\n        d.date = d3.timeParse('%Y-%m-%d')(d.vaccine_date);\n    });\n\n    d3.select('.vaccine-areachart  > *').remove();\n\n    const margin = { top: 20, right: 20, bottom: 180, left: 70 }\n    const graphWidth = props.width - margin.left - margin.right;;\n    const graphHeight = props.height - margin.top - margin.bottom;\n\n    let svg = d3.select('.vaccine-areachart')\n        .append('svg')\n        .attr('width', graphWidth + margin.left + margin.right)\n        .attr('height', graphHeight + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform',\n            'translate(' + margin.left + ',' + margin.top + ')');\n\n    dataset.forEach(function (d) {\n        d.vaccine_date = d3.timeParse('%Y-%m-%d')(d.vaccine_date);\n    });\n\n\n    // Add X axis --> it is a date format\n\n\n    let x = d3.scaleTime()\n        .domain(d3.extent(dataset, d => d.vaccine_date))\n        .range([0, graphWidth]);\n\n    const xAxis = d3.axisBottom(x)\n        .ticks(6)\n        .tickFormat(d3.timeFormat('%b %d'));\n\n    svg.append('g')\n        .attr('transform', `translate(0,${graphHeight})`)\n        .call(xAxis);\n\n    // Add Y axis\n    var y = d3.scaleLinear()\n        .domain([0, d3.max(dataset, d => d.daily_vaccinations)])\n        .range([graphHeight, 0]);\n    const yAxis = d3.axisLeft(y)\n        .tickFormat(d => {\n            return numFormatter(d);\n        });\n    svg.append('g')\n        .call(yAxis)\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - margin.left)\n        .attr('x', 0 - (graphHeight / 2))\n        .attr('dy', '2em')\n        .style('text-anchor', 'middle')\n        .style('fill', '#141414')\n        .text('Daily Vaccinations');\n\n    // Add the line\n    let curve = d3.curveLinear;\n\n    svg.append('path')\n        .datum(dataset)\n        .attr('fill', '#cce5df')\n        .attr('stroke', 'steelblue')\n        .attr('stroke-width', 1.5)\n        .attr('d', d3.area()\n            .curve(curve)\n            .x(d => x(d.vaccine_date))\n            .y0(y(0))\n            .y1(d => y(d.daily_vaccinations))\n        );\n}\n\n\nconst numFormatter = (num) => {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(0) + 'M'; // convert to M for number from > 1 million \n    } else if (num < 900) {\n        return num; // if value < 1000, nothing to do\n    }\n}\n\nexport default AreaView;","import React, { Component } from 'react';\nimport AreaView from './vaccine-area-chart'\n\nexport default class AreaChart extends Component {\n\n    componentDidMount() {\n        AreaView(this.props);\n    }\n\n    componentDidUpdate(preProps) {\n        AreaView(this.props);\n    }\n \n    render() {\n        return (\n            <div className='vaccine-areachart'/>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './area-view.css';\nimport AreaChart from '../../../d3_graph/vaccination/area_chart';\nimport data from '../../../data/index'\n\nexport default class AreaChartView extends Component {\n\n\n    render() {\n      \n        let { countryData } = this.props;\n        if(countryData === undefined || (Object.keys(countryData).length === 0)){\n            countryData = data\n        }\n        const width = 560;\n        const height = 480;\n        return (\n            <div id='area-view' className='pane'>\n                <div className='header'>Area Chart : {countryData.country}</div>\n                <AreaChart data={countryData} width={width} height={height} />\n            </div>\n        )\n    }\n} ","import React from 'react'\n\nimport WorldView from './world'\nimport PieView from './pie';\nimport TabularView from './tabular'\nimport BarChartView from './bar';\nimport FooterView from '../../footer'\nimport Info from './info'\nimport { Layout } from 'antd';\nimport './vaccination.css'\nimport AreaChartView from './area';\nconst { Sider, Content } = Layout;\n\nexport class VaccinationView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            vaccine: {},\n            manufacturer: {}\n        }\n    }\n\n    callbackFunction = (vaccineData, manufacturerData) => {\n        this.setState({ vaccine: vaccineData })\n        this.setState({ manufacturer: manufacturerData })\n    }\n\n    render() {\n        return (\n            <div>\n                <Layout style={{ height: 920 }}>\n                    <Sider width={300} style={{ backgroundColor: '#eee' }}>\n                        <Content style={{ height: 400 }}>\n                            <Info countryData={this.state.vaccine} />\n                        </Content>\n                        <Content style={{ height: 640 }}>\n                            <PieView countryData={this.state.vaccine} manufacturerData={this.state.manufacturer} />\n                        </Content>\n                    </Sider>\n                    <Layout>\n                        <Content style={{ height: 320 }}>\n                            <WorldView parentCallback={this.callbackFunction} width={800} height={350}/>\n                            <BarChartView manufacturerData={this.state.manufacturer} />\n                        </Content>\n                        <Sider width={600} style={{ backgroundColor: '#eee' }}>\n                            <Content style={{ height: 400 }}>\n                                <AreaChartView countryData={this.state.vaccine} width={1000} height={750} />\n                            </Content>\n                            <Content style={{ height: 350 }}>\n                                <TabularView countryData={this.state.vaccine}/>\n                            </Content>\n                        </Sider>\n                    </Layout>\n                </Layout>\n                <Layout>\n                    <FooterView />\n                </Layout>\n            </div>\n        )\n    }\n};\n\nexport default VaccinationView;","const data = {\n    \"updated\": \"NA\",\n    \"country\": \"NA\",\n    \"countryInfo\": {\n        \"_id\": 4,\n        \"iso2\": \"AF\",\n        \"iso3\": \"AFG\",\n        \"lat\": 33,\n        \"flag\": \"https://disease.sh/assets/img/flags/af.png\"\n    },\n    \"cases\": 0,\n    \"todayCases\": 0,\n    \"deaths\": 0,\n    \"todayDeaths\": 0,\n    \"recovered\": 0,\n    \"todayRecovered\": 0,\n    \"active\": 0,\n    \"critical\": 0,\n    \"casesPerOneMillion\": 0,\n    \"deathsPerOneMillion\": 0,\n    \"tests\": 0,\n    \"testsPerOneMillion\": 0,\n    \"population\": 0,\n    \"continent\": \"Asia\",\n    \"oneCasePerPeople\": 0,\n    \"oneDeathPerPeople\": 10,\n    \"oneTestPerPeople\": 10,\n    \"activePerOneMillion\": 10,\n    \"recoveredPerOneMillion\": 10,\n    \"criticalPerOneMillion\": 10\n}\nexport default data","import React, { Component } from 'react'\nimport './test-info.css';\nimport Flag from 'react-world-flags'\nimport data from  '../../../data/bar-test'\n\nexport default class TestInfo extends Component {\n  \n    render() {\n\n        let countryData  = this.props.covidTestingData;\n        if(countryData === undefined || (Object.keys(countryData).length === 0)){\n            countryData = data\n        }\n    \n        return (\n            <div id='info-test-view' className='pane'>\n                <div className='header'>Country:<span> {countryData.country}</span></div>\n                <Flag  width=\"270\" height=\"200\" code={countryData.countryInfo.iso3} fallback={ <img src=\"no-image-icon.png\" alt=\"No Flag Available\" height=\"200\" width=\"270\"/>} />\n                <div>     \n                    <div className={'info-test-view'} >\n                        <div><span>Country:</span> {countryData.country}</div>\n                        <div><span>Cases Per Million:</span> {countryData.casesPerOneMillion}</div>\n                        <div><span>Deaths Per Million:</span> {countryData.deathsPerOneMillion}</div>\n                        <div><span>Tests Per Million:</span> {countryData.testsPerOneMillion}</div>\n                        <div><span>Recovered Per Million</span> {countryData.recoveredPerOneMillion}</div>\n                        <div><span>Critical Per Million</span> {countryData.criticalPerOneMillion}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/110m.702ca108.tsv\";","const data = {\n    \"country\": \"NA\",\n    \"isoCode\": \"NA\",\n    \"timeline\": {\n        \"cases\": [\n            {\n                \"date\": \"2021-07-13\",\n                \"value\": 5210472\n            },\n            {\n                \"date\": \"2021-07-08\",\n                \"value\": 5040060\n            },\n            {\n                \"date\": \"2021-07-11\",\n                \"value\": 5139162\n            },\n            {\n                \"date\": \"2021-07-17\",\n                \"value\": 5407428\n            },\n            {\n                \"date\": \"2021-07-15\",\n                \"value\": 5301296\n            },\n            {\n                \"date\": \"2021-07-22\",\n                \"value\": 5626745\n            },\n            {\n                \"date\": \"2021-07-28\",\n                \"value\": 5797445\n            },\n            {\n                \"date\": \"2021-07-26\",\n                \"value\": 5748331\n            },\n            {\n                \"date\": \"2021-07-30\",\n                \"value\": 5857639\n            },\n            {\n                \"date\": \"2021-07-24\",\n                \"value\": 5694462\n            },\n            {\n                \"date\": \"2021-07-19\",\n                \"value\": 5495947\n            },\n            {\n                \"date\": \"2021-07-20\",\n                \"value\": 5542635\n            },\n            {\n                \"date\": \"2021-07-06\",\n                \"value\": 4975903\n            },\n            {\n                \"date\": \"2021-07-04\",\n                \"value\": 4920168\n            },\n            {\n                \"date\": \"2021-07-02\",\n                \"value\": 4871807\n            },\n            {\n                \"date\": \"2021-07-12\",\n                \"value\": 5173972\n            },\n            {\n                \"date\": \"2021-07-10\",\n                \"value\": 5107780\n            },\n            {\n                \"date\": \"2021-07-07\",\n                \"value\": 5007964\n            },\n            {\n                \"date\": \"2021-07-09\",\n                \"value\": 5075945\n            },\n            {\n                \"date\": \"2021-07-14\",\n                \"value\": 5252655\n            },\n            {\n                \"date\": \"2021-07-16\",\n                \"value\": 5353245\n            },\n            {\n                \"date\": \"2021-07-29\",\n                \"value\": 5828316\n            },\n            {\n                \"date\": \"2021-07-25\",\n                \"value\": 5723399\n            },\n            {\n                \"date\": \"2021-07-01\",\n                \"value\": 4844944\n            },\n            {\n                \"date\": \"2021-07-21\",\n                \"value\": 5586716\n            },\n            {\n                \"date\": \"2021-07-27\",\n                \"value\": 5771732\n            },\n            {\n                \"date\": \"2021-07-23\",\n                \"value\": 5662838\n            },\n            {\n                \"date\": \"2021-07-05\",\n                \"value\": 4947274\n            },\n            {\n                \"date\": \"2021-07-18\",\n                \"value\": 5455276\n            },\n            {\n                \"date\": \"2021-07-03\",\n                \"value\": 4896272\n            }\n        ],\n        \"deaths\": [\n            {\n                \"date\": \"2021-07-13\",\n                \"value\": 128747\n            },\n            {\n                \"date\": \"2021-07-08\",\n                \"value\": 128601\n            },\n            {\n                \"date\": \"2021-07-11\",\n                \"value\": 128691\n            },\n            {\n                \"date\": \"2021-07-17\",\n                \"value\": 128960\n            },\n            {\n                \"date\": \"2021-07-15\",\n                \"value\": 128864\n            },\n            {\n                \"date\": \"2021-07-22\",\n                \"value\": 129266\n            },\n            {\n                \"date\": \"2021-07-28\",\n                \"value\": 129718\n            },\n            {\n                \"date\": \"2021-07-26\",\n                \"value\": 129460\n            },\n            {\n                \"date\": \"2021-07-30\",\n                \"value\": 129877\n            },\n            {\n                \"date\": \"2021-07-24\",\n                \"value\": 129418\n            },\n            {\n                \"date\": \"2021-07-19\",\n                \"value\": 129007\n            },\n            {\n                \"date\": \"2021-07-20\",\n                \"value\": 129109\n            },\n            {\n                \"date\": \"2021-07-06\",\n                \"value\": 128532\n            },\n            {\n                \"date\": \"2021-07-04\",\n                \"value\": 128486\n            },\n            {\n                \"date\": \"2021-07-02\",\n                \"value\": 128453\n            },\n            {\n                \"date\": \"2021-07-12\",\n                \"value\": 128697\n            },\n            {\n                \"date\": \"2021-07-10\",\n                \"value\": 128665\n            },\n            {\n                \"date\": \"2021-07-07\",\n                \"value\": 128565\n            },\n            {\n                \"date\": \"2021-07-09\",\n                \"value\": 128631\n            },\n            {\n                \"date\": \"2021-07-14\",\n                \"value\": 128797\n            },\n            {\n                \"date\": \"2021-07-16\",\n                \"value\": 128913\n            },\n            {\n                \"date\": \"2021-07-29\",\n                \"value\": 129809\n            },\n            {\n                \"date\": \"2021-07-25\",\n                \"value\": 129446\n            },\n            {\n                \"date\": \"2021-07-01\",\n                \"value\": 128426\n            },\n            {\n                \"date\": \"2021-07-21\",\n                \"value\": 129182\n            },\n            {\n                \"date\": \"2021-07-27\",\n                \"value\": 129591\n            },\n            {\n                \"date\": \"2021-07-23\",\n                \"value\": 129330\n            },\n            {\n                \"date\": \"2021-07-05\",\n                \"value\": 128495\n            },\n            {\n                \"date\": \"2021-07-18\",\n                \"value\": 128988\n            },\n            {\n                \"date\": \"2021-07-03\",\n                \"value\": 128471\n            }\n        ],\n        \"recovered\": [\n            {\n                \"date\": \"2021-07-13\",\n                \"value\": 16007\n            },\n            {\n                \"date\": \"2021-07-08\",\n                \"value\": 15888\n            },\n            {\n                \"date\": \"2021-07-11\",\n                \"value\": 15903\n            },\n            {\n                \"date\": \"2021-07-17\",\n                \"value\": 16429\n            },\n            {\n                \"date\": \"2021-07-15\",\n                \"value\": 16133\n            },\n            {\n                \"date\": \"2021-07-22\",\n                \"value\": 17290\n            },\n            {\n                \"date\": \"2021-07-28\",\n                \"value\": 19724\n            },\n            {\n                \"date\": \"2021-07-26\",\n                \"value\": 18546\n            },\n            {\n                \"date\": \"2021-07-30\",\n                \"value\": 20919\n            },\n            {\n                \"date\": \"2021-07-24\",\n                \"value\": 18216\n            },\n            {\n                \"date\": \"2021-07-19\",\n                \"value\": 16487\n            },\n            {\n                \"date\": \"2021-07-20\",\n                \"value\": 16686\n            },\n            {\n                \"date\": \"2021-07-06\",\n                \"value\": 15867\n            },\n            {\n                \"date\": \"2021-07-04\",\n                \"value\": 15774\n            },\n            {\n                \"date\": \"2021-07-02\",\n                \"value\": 15755\n            },\n            {\n                \"date\": \"2021-07-12\",\n                \"value\": 15991\n            },\n            {\n                \"date\": \"2021-07-10\",\n                \"value\": 15892\n            },\n            {\n                \"date\": \"2021-07-07\",\n                \"value\": 15870\n            },\n            {\n                \"date\": \"2021-07-09\",\n                \"value\": 15888\n            },\n            {\n                \"date\": \"2021-07-14\",\n                \"value\": 16127\n            },\n            {\n                \"date\": \"2021-07-16\",\n                \"value\": 16220\n            },\n            {\n                \"date\": \"2021-07-29\",\n                \"value\": 20638\n            },\n            {\n                \"date\": \"2021-07-25\",\n                \"value\": 18226\n            },\n            {\n                \"date\": \"2021-07-01\",\n                \"value\": 15753\n            },\n            {\n                \"date\": \"2021-07-21\",\n                \"value\": 17033\n            },\n            {\n                \"date\": \"2021-07-27\",\n                \"value\": 18908\n            },\n            {\n                \"date\": \"2021-07-23\",\n                \"value\": 17450\n            },\n            {\n                \"date\": \"2021-07-05\",\n                \"value\": 15777\n            },\n            {\n                \"date\": \"2021-07-18\",\n                \"value\": 16430\n            },\n            {\n                \"date\": \"2021-07-03\",\n                \"value\": 15762\n            }\n        ]\n    }\n}\nexport default data","\nimport React from \"react\"\nimport { geoEqualEarth, geoPath } from \"d3-geo\"\nimport axios from 'axios'\nimport * as d3 from 'd3'\nimport './world-test.css'\nimport tsvData from './110m.tsv'\nimport { feature } from \"topojson-client\"\nimport mockData from '../../../data/bar-test'\nimport mockLineData from '../../../data/line-test'\n\nconst projection = geoEqualEarth()\n    .scale(160)\n    .translate([800 / 2, 450 / 2])\n\nexport default class WorldTestView extends React.Component {\n    state = {\n        geographies: [],\n        covidSummary: {},\n        worldData: [],\n        timelineData: {}\n    }\n\n    componentDidMount() {\n        fetch(\"https://unpkg.com/world-atlas@2.0.2/countries-110m.json\")\n            .then(response => {\n                if (response.status !== 200) {\n                    console.log(`There was a problem: ${response.status}`)\n                    return\n                }\n                response.json().then(worlddata => {\n                    this.setState({ geographies: feature(worlddata, worlddata.objects.countries).features })\n                });\n                fetch(\"http://localhost:8081/covid-testing-service/testing/all\")\n                    .then(resp => {\n                        if (resp.status !== 200) {\n                            console.log(`There was a problem: ${resp.status}`)\n                            return\n                        }\n                        resp.json().then(world => {\n                            this.setState({ worldData: world })\n                        })\n                    });\n\n            })\n            this.handleOnLoad('GBR');\n    };\n\n\n    handleCountryMouseOver = (countryIndex, i) => {\n        const countryData = this.state.geographies[countryIndex]\n        let iso;\n        Promise.all([\n            d3.tsv(tsvData),\n        ]).then(data => {\n            console.log(data)\n            data[0].forEach(item => {\n                if (countryData.id === item.iso_n3) {\n                    iso = item.iso_a3;\n                }\n            })\n            const covidResponse = this.covidRequest(iso)\n            covidResponse.then(covid => {\n                if (covid.data === undefined || (Object.keys(covid.data).length === 0)) {\n                    covid.data = mockData;\n                }\n                this.setState({ covidSummary: covid.data })\n                const covidTimelineRequest = this.covidTimelineRequest(iso);\n                covidTimelineRequest.then(timeline => {\n                    if (timeline.data === undefined || (Object.keys(timeline.data).length === 0)) {\n                        timeline.data = mockLineData;\n                    }\n                    this.setState({ timelineData: timeline.data })\n                    this.props.parentCallback(covid.data, timeline.data);\n                });\n            });\n        });\n    }\n\n    covidRequest = (iso) => {\n        try {\n            const covidUrl = 'http://localhost:8081/covid-testing-service/testing/iso-code/' + iso\n            console.log(covidUrl)\n            return axios.get(covidUrl);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    covidTimelineRequest = (iso) => {\n        try {\n            const timelineUrl = 'http://localhost:8081/covid-testing-service/testing/timeline/' + iso\n            console.log(timelineUrl)\n            return axios.get(timelineUrl);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    handleOnLoad = (iso) => {\n        const covidResponse = this.covidRequest(iso)\n        covidResponse.then(covid => {\n            this.setState({ covidSummary: covid.data })\n            const timeLineRequest = this.covidTimelineRequest(iso)\n            timeLineRequest.then(timeline => {\n                this.setState({ timelineData: timeline.data })\n                this.props.parentCallback(covid.data, timeline.data);\n            });\n        });\n    }\n\n    numFormatter = (num) => {\n        if (num > 999 && num < 1000000) {\n            return (num / 1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n        } else if (num > 1000000) {\n            return (num / 1000000).toFixed(0) + 'M'; // convert to M for number from > 1 million \n        } else if (num < 900) {\n            return num; // if value < 1000, nothing to do\n        }\n    }\n\n    showToolTip = (elem, event, d) => {\n        elem\n            .classed(\"hidden\", false)\n            .html(\n                \"<span class='tooltip-header'><b>\" + d.properties.name + \"</b></span><br><hr>\" +\n                \"Date: <span class='tooltip-text'>\" + this.state.covidSummary.updated + \"</span><br>\" +\n                \"Cases: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.cases) + \"</span><br>\" +\n                \"Todays Cases: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.todayCases) + \"</span><br>\" +\n                \"Deaths: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.deaths) + \"</span><br>\" +\n                \"Recovered: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.recovered) + \"</span><br>\" +\n                \"Active: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.active) + \"</span><br>\" +\n                \"Critical: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.critical) + \"</span><br>\" +\n                \"Tests: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.tests) + \"</span><br>\" +\n                \"Population: <span class='tooltip-text'>\" + this.numFormatter(this.state.covidSummary.population) + \"</span><br>\"\n            )\n            .attr(\n                \"style\",\n                \"left:\" +\n                (event.pageX + 15) +\n                \"px; top:\" +\n                (event.pageY + 20) +\n                \"px\"\n            );\n    }\n\n    render() {\n        d3.selectAll('.tooltip').remove();\n        const tooltip =\n            d3.select(\".world-map\")\n                .append(\"div\")\n                .attr(\"class\", \"hidden tooltip\");\n\n        const width = this.props.width;\n        const height = this.props.height;\n\n        const zoomWorld =\n            d3.zoom()\n                .scaleExtent([-15, 30])\n                .translateExtent([\n                    [0, 0],\n                    [width, height]\n                ])\n                .on(\"zoom\", function (event) {\n                    d3.select(\"g\").attr(\"transform\", event.transform);\n                });\n\n        const svg =\n            d3.select(\".svg-map-world\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                .attr(\"viewBox\", `0 0 800 450`)\n                .call(d3.zoom().on(\"zoom\", function (event) {\n                    svg.attr(\"transform\", event.transform)\n                 }));\n\n\n        return (\n            <div className='pane'>\n                <div className='header'>World Map</div>\n                <div className=\"world-map\"> </div>\n                <svg width={width} height={height} viewBox=\"0 0 800 450\" className=\"svg-map-world\">\n                    <g className=\"world-test-view\">\n                        {\n                            this.state.geographies.map((d, i) => (\n                                <path\n                                    id={`path-${i}`}\n                                    key={`path-${i}`}\n                                    d={geoPath().projection(projection)(d)}\n                                    className=\"country\"\n                                    fill={`rgba(38,50,56,${1 / this.state.geographies.length * i})`}\n                                    data-name={d.properties.name}\n                                    stroke=\"aliceblue\"\n                                    strokeWidth={0.5}\n                                    onMouseOver={() => this.handleCountryMouseOver(i)}\n                                    onMouseMove={(event) => this.showToolTip(tooltip, event, d)}\n                                    onMouseOut={() => {\n                                        tooltip.classed(\"hidden\", true);\n                                    }}\n                                />\n                            ))\n                        }\n                    </g>\n                </svg>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './linear-bar.css'\n\nexport default class LinearBarChart extends Component {\n\n    render() {\n        console.log('Line Chart', this.props.worldDataProp)\n        let filterDataset = [];\n        this.props.worldDataProp.forEach(item => {\n            let worldObj = {\n                'country': item.country,\n                'cases': item.cases\n            }\n            filterDataset.push(worldObj);\n        })\n\n        filterDataset = filterDataset.sort((a, b) => b.cases - a.cases).slice(0, 10);\n        console.log(filterDataset)\n        d3.select('.testing-linear-barchart > *').remove();\n\n        // set the dimensions and margins of the graph\n        var margin = { top: 20, right: 30, bottom: 130, left: 60 },\n            width = this.props.width - margin.left - margin.right,\n            height = this.props.height - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = d3.select(\".testing-linear-barchart\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        // Add X axis\n        var x = d3.scaleLinear()\n            .domain([0, d3.max(filterDataset, d => d.cases)])\n            .range([0, width]);\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x)\n                .ticks(10)\n                .tickFormat(d => numFormatter(d)))\n            .selectAll(\"text\")\n            .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n            .style(\"text-anchor\", \"end\");\n\n        // Y axis\n        var y = d3.scaleBand()\n            .range([0, height])\n            .domain(filterDataset.map(function (d) { return d.country; }))\n            .padding(.1);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y))\n\n        //Bars\n        svg.selectAll(\"myRect\")\n            .data(filterDataset)\n            .enter()\n            .append(\"rect\")\n            .transition() // <---- Here is the transition\n            .duration(200)\n            .attr(\"x\", x(0))\n            .attr(\"y\", function (d) { return y(d.country); })\n            .attr(\"width\", function (d) { return x(d.cases); })\n            .attr(\"height\", y.bandwidth())\n            .attr(\"fill\", \"#e28743\");\n\n\n        return (\n            <div id='linear-bar-view' className='pane'>\n                <div className='header'>Linear Bar Chart : Top Countries Of Maximum Cases </div>\n                <div>\n                    <div className='testing-linear-barchart' />\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst numFormatter = (num) => {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(0) + 'M'; // convert to M for number from > 1 million \n    } else if (num < 900) {\n        return num; // if value < 1000, nothing to do\n    }\n}\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './circular-barplot.css'\n\nexport default class CircularPlotView extends Component {\n\n    render() {\n        console.log('Circulat chart Chart', this.props.worldDataProp)\n        let filterDataset = [];\n        let countryList = [];\n        this.props.worldDataProp.forEach(item => {\n            \n            let worldObj = {\n                'deaths': item.deaths,\n                'cases': item.cases,\n                'active': item.active,\n                'recovered': item.recovered,\n                'continent': item.continent,\n                'country': item.country,\n                'population': item.population\n            }\n            filterDataset.push(worldObj);\n            countryList.push(item.country);\n        })\n\n        filterDataset = filterDataset.sort((a, b) => b.active - a.active).slice(0, 20);\n        console.log(filterDataset)\n\n        d3.selectAll('.circular-bar-plot > *').remove();\n\n        // set the dimensions and margins of the graph\n        const margin = { top: 70, right: 70, bottom: 50, left: 80 },\n            width = this.props.width - margin.left - margin.right,\n            height = this.props.height - margin.top - margin.bottom;\n\n        const svg = d3.select(\".circular-bar-plot\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n        // Add X axis\n        const x = d3.scaleLinear()\n            .domain([0, d3.max(filterDataset, d => d.cases)])\n            .range([0, width]);\n        svg.append(\"g\")\n            .attr(\"transform\", `translate(0, ${height})`)\n            .call(d3.axisBottom(x))\n            .append(\"text\")\n            .attr(\"transform\",\n                \"translate(\" + (width / 2) + \" ,\" +\n                (height + margin.top + 20) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Recovered\");\n\n\n        // Add Y axis\n        const y = d3.scaleLinear()\n            .domain([0, d3.max(filterDataset, d => d.active)])\n            .range([height, 0]);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y))\n            .append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 0 - margin.left)\n            .attr('x', 0 - (height / 2))\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', '#141414')\n            .text('Active Cases');;\n\n        // Add a scale for bubble size\n        const z = d3.scaleLinear()\n            .domain([d3.min(filterDataset, d => d.recovered), d3.max(filterDataset, d => d.recovered)])\n            .range([4, 20]);\n\n\n        // Add a scale for bubble color\n        const myColor = d3.scaleOrdinal()\n            .domain(countryList)\n            .range(d3.schemeSet2);\n\n\n        const tooltip = d3.select(\".circular-bar-plot\")\n            .append(\"div\")\n            .style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip-plot\");\n\n        // -2- Create 3 functions to show / update (when mouse move but stay on same circle) / hide the tooltip\n        const showTooltip = function (event, d) {\n            console.log(\"Tooltip\", d);\n            tooltip\n                .transition()\n                .duration(200)\n            tooltip\n                .style(\"opacity\", 1)\n                .html(\"Country: \" + d.country)\n                .style(\"left\", (event.x) / 2 + \"px\")\n                .style(\"top\", (event.y) / 2 + \"px\")\n        }\n        const moveTooltip = function (event, d) {\n            tooltip\n                .style(\"left\", (event.x) / 2 + \"px\")\n                .style(\"top\", (event.y) / 2 + 30 + \"px\")\n        }\n        const hideTooltip = function (event, d) {\n            tooltip\n                .transition()\n                .duration(200)\n                .style(\"opacity\", 0)\n        }\n\n        // Add dots\n        svg.append('g')\n            .selectAll(\"dot\")\n            .data(filterDataset)\n            .join(\"circle\")\n            .attr(\"class\", \"bubbles\")\n            .attr(\"cx\", d => x(d.cases))\n            .attr(\"cy\", d => y(d.active))\n            .attr(\"r\", d => z((d.recovered)))\n            .style(\"fill\", d => myColor(d.country))\n            .on(\"mouseover\", showTooltip)\n            .on(\"mousemove\", moveTooltip)\n            .on(\"mouseleave\", hideTooltip)\n\n\n\n        return (\n            <div id='circular-plot-view' className='pane' >\n                <div className='header'>Bubble View : Recovered Cases</div>\n                <div>\n                    <div className='circular-bar-plot' />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './donut-chart.css'\nimport mockData from '../../../data/bar-test'\n\nexport default class DonutChartView extends Component {\n\n    render() {\n\n\n        let covidTestingData = this.props.covidTestingData;\n        if (covidTestingData === undefined || (Object.keys(covidTestingData).length === 0)) {\n            covidTestingData = mockData;\n        }\n        let data = {\n            'cases': covidTestingData.cases,\n            'deaths': covidTestingData.deaths,\n            'recovered': covidTestingData.recovered,\n            'active': covidTestingData.active\n        };\n        // set the dimensions and margins of the graph\n        const width = 850,\n        height = 450,\n        margin = 30\n        \n\n        // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n        const radius = Math.min(width, height) / 2 - margin\n         d3.select('.donut-test-chart > *').remove();\n        // append the svg object to the div called 'my_dataviz'\n        const svg = d3.select(\".donut-test-chart\")\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n        // set the color scale\n        const color = d3.scaleOrdinal()\n            .domain(Object.keys(data))\n            .range(d3.schemeDark2);\n\n        // Compute the position of each group on the pie:\n        const pie = d3.pie()\n            .sort(null) // Do not sort group by size\n            .value(d => d[1])\n        const data_ready = pie(Object.entries(data))\n\n        // The arc generator\n        const arc = d3.arc()\n            .innerRadius(radius * 0.5)         // This is the size of the donut hole\n            .outerRadius(radius * 0.8)\n\n        // Another arc that won't be drawn. Just for labels positioning\n        const outerArc = d3.arc()\n            .innerRadius(radius * 0.9)\n            .outerRadius(radius * 0.9)\n\n        // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n        svg\n            .selectAll('allSlices')\n            .data(data_ready)\n            .join('path')\n            .attr('d', arc)\n            .attr('fill', d => color(d.data[1]))\n            .attr(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"2px\")\n            .style(\"opacity\", 0.7)\n\n        // Add the polylines between chart and labels:\n        svg\n            .selectAll('allPolylines')\n            .data(data_ready)\n            .join('polyline')\n            .attr(\"stroke\", \"black\")\n            .style(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr('points', function (d) {\n                const posA = arc.centroid(d) // line insertion in the slice\n                const posB = outerArc.centroid(d) // line break: we use the other arc generator that has been built only for that\n                const posC = outerArc.centroid(d); // Label position = almost the same as posB\n                const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2 // we need the angle to see if the X position will be at the extreme right or extreme left\n                posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n                return [posA, posB, posC]\n            })\n\n        // Add the polylines between chart and labels:\n        svg\n            .selectAll('allLabels')\n            .data(data_ready)\n            .join('text')\n            .text(d => d.data[0])\n            .attr('transform', function (d) {\n                const pos = outerArc.centroid(d);\n                const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2\n                pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\n                return `translate(${pos})`;\n            })\n            .style('text-anchor', function (d) {\n                const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2\n                return (midangle < Math.PI ? 'start' : 'end')\n            })\n\n\n\n        return (\n            <div id='donut-chart-view' className='pane' >\n                <div className='header'>Donut Chart  : {covidTestingData.country} </div>\n                <div>\n                    <div className='donut-test-chart' />\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './lollipop-chart.css'\nimport mockData from '../../../data/line-test'\n\nexport default class LollipopChartView extends Component {\n\n    render() {\n\n        let covidTimelineData = this.props.timelineData;\n        console.log(\"Covid Line View\", covidTimelineData)\n\n        if (covidTimelineData === undefined || (Object.keys(covidTimelineData).length === 0)) {\n            covidTimelineData = mockData;\n            console.log(\"Mock Line Data\", covidTimelineData)\n        }\n        //  let data = covidTimelineData.timeline.cases.slice(0, 8);\n        // let recovered = covidTimelineData.timeline.recovered;\n        let covidDeathList = covidTimelineData.timeline.deaths;\n        let dataset = covidDeathList.slice(Math.max(covidDeathList.length - 8, 0));\n\n        console.log(\"Cases\", dataset);\n        dataset.forEach(item => {\n            item.date = new Date(item.date);\n        })\n        dataset = dataset.sort((a, b) => a.date - b.date)\n\n        // set the dimensions and margins of the graph\n        var margin = { top: 20, right: 30, bottom: 100, left: 60 },\n            width = this.props.width - margin.left - margin.right,\n            height = this.props.height - margin.top - margin.bottom;\n\n        d3.select(\".lollipop-testing-chart > *\").remove()\n\n        // append the svg object to the body of the page\n        var svg = d3.select(\".lollipop-testing-chart\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // X axis\n        const x = d3.scaleBand()\n            .range([0, width])\n            .domain(dataset.map(function (d) { return d.date; }))\n            .padding(1);\n        svg.append(\"g\")\n            .attr(\"transform\", `translate(0, ${height})`)\n            .call(d3.axisBottom(x)\n                .ticks(8)\n                .tickFormat(d3.timeFormat('%b %d')))\n            .selectAll(\"text\")\n            .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n            .style(\"text-anchor\", \"end\");\n\n        // Add Y axis\n        const y = d3.scaleLinear()\n            .domain([0, d3.max(dataset, d => d.value)])\n            .range([height, 0]);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y)\n                .ticks(6)\n                .tickFormat(d => {\n                    return numFormatter(d);\n                }))\n            .append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 0 - margin.left)\n            .attr('x', 0 - (height / 2))\n            .attr('dy', '2em')\n            .style('text-anchor', 'middle')\n            .style('fill', '#141414')\n            .text('Deaths');;\n\n        // Lines\n        svg.selectAll(\"myline\")\n            .data(dataset)\n            .enter()\n            .append(\"line\")\n            .attr(\"x1\", function (d) { return x(d.date); })\n            .attr(\"x2\", function (d) { return x(d.date); })\n            .attr(\"y1\", function (d) { return y(d.value); })\n            .attr(\"y2\", y(0))\n            .attr(\"stroke\", \"grey\")\n            .transition()\n            .duration(2000)\n\n        // Circles\n        svg.selectAll(\"mycircle\")\n            .data(dataset)\n            .join(\"circle\")\n            .attr(\"cx\", function (d) { return x(d.date); })\n            .attr(\"cy\", function (d) { return y(d.value); })\n            .attr(\"r\", \"4\")\n            .style(\"fill\", \"#0CED1\")\n            .attr(\"stroke\", \"blue\")\n\n\n        return (\n            <div id='lollipop-chart-view' className='pane'>\n                <div className='header'>Country:{covidTimelineData.country}</div>\n                <div className='lollipop-testing-chart' ></div>\n            </div>\n        )\n    }\n}\n\nconst numFormatter = (num) => {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(0) + 'K'; // convert to K for number from > 1000 < 1 million \n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(0) + 'M'; // convert to M for number from > 1 million \n    } else if (num < 900) {\n        return num; // if value < 1000, nothing to do\n    }\n}\n","import React from 'react'\n\nimport FooterView from '../../footer'\nimport TestInfo from './test-info'\nimport WorldTestView from './world-test'\nimport { Layout } from 'antd';\nimport './covid-testing.css'\nimport LinearBarChart from './linear-bar';\nimport CircularPlotView from './circular-barplot';\nimport DonutChartView from './donut-chart';\nimport LollipopChartView from './lollipop-chart';\n\n\nconst { Sider, Content } = Layout;\n\nexport class TestingView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            covidTestingData: {},\n            covidTimelineData: {},\n            worldData: []\n        }\n    }\n\n    componentWillMount() {\n        fetch(\"http://localhost:8081/covid-testing-service/testing/all\")\n            .then(resp => {\n                if (resp.status !== 200) {\n                    console.log(`There was a problem: ${resp.status}`)\n                    return\n                }\n                resp.json().then(world => {\n                    console.log('Wordldddddddd', world)\n                    this.setState({ worldData: world })\n                })\n\n            });\n    }\n\n\n    callbackFunction = (covidData, timelineData) => {\n        this.setState({ covidTestingData: covidData })\n        this.setState({ covidTimelineData: timelineData })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Layout style={{ height: 920 }}>\n                    <Sider width={300} style={{ backgroundColor: '#eee' }}>\n                        <Content style={{ height: 400 }}>\n                            <TestInfo covidTestingData={this.state.covidTestingData}/>\n                        </Content>\n                        <Content style={{ height: 320 }}>\n                            <LollipopChartView timelineData={this.state.covidTimelineData} width={300} height={490} />\n                        </Content>\n                    </Sider>\n                    <Layout>\n                        <Content style={{ height: 600 }}>\n                            <WorldTestView parentCallback={this.callbackFunction} width={800} height={350} />\n                            <DonutChartView covidTestingData={this.state.covidTestingData} width={450} height={450} />\n                        </Content>\n                        <Sider width={600} style={{ backgroundColor: '#eee' }}>\n                            <Content style={{ height: 400 }}>\n                                <LinearBarChart worldDataProp={this.state.worldData} width={560} height={440} />\n                            </Content>\n                            <Content style={{ height: 320 }}>\n                                <CircularPlotView worldDataProp={this.state.worldData} width={560} height={440} />\n                            </Content>\n                        </Sider>\n                    </Layout>\n                </Layout>\n                <Layout>\n                    <FooterView />\n                </Layout>\n            </div>\n        )\n    }\n};\n\nexport default TestingView;","import React from 'react'\n\n\n\nconst Test = () => {\n    return (\n\n        <div id='test-view' className='pane'>\n            <div className='header'>Test Chart</div>\n            <div>\n                <div className='test-scan-view' />\n                <div class=\"papaya\"></div> \n            </div>\n        </div>\n    )\n}\nexport default Test\n","import React, { Component } from 'react'\n\nimport Test from '../test'\nimport FooterView from '../../footer'\nimport { Layout } from 'antd';\nimport './covid-report.css'\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport default class ReportView extends Component {\n\n    render() {\n        return (\n            <div>\n                 <Layout>\n                    <Header className=\"header-pane\"><span id=\"header-app\">Covid App</span></Header>\n                </Layout>\n                <Layout style={{ height: 920 }}>\n                    \n                    <Sider width={300} style={{ backgroundColor: '#eee' }}>\n                        <Content style={{ height: 400 }}>\n                            <Test />\n                        </Content>\n                        <Content style={{ height: 320 }}>\n                            <Test width={300} height={490} />\n                        </Content>\n                    </Sider>\n                    <Layout>\n                        <Content style={{ height: 600 }}>\n                            <Test width={450} height={450} />\n                        </Content>\n                        <Sider width={600} style={{ backgroundColor: '#eee' }}>\n                            <Content style={{ height: 400 }}>\n                                <Test width={560} height={440} />\n                            </Content>\n                            <Content style={{ height: 320 }}>\n                                <Test width={560} height={440} />\n                            </Content>\n                        </Sider>\n                    </Layout>\n                </Layout>\n                <Layout>\n                    <FooterView />\n                </Layout>\n            </div>\n        )\n    }\n}\n\n","import './CovidApp.css';\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport React from 'react'\nimport VaccinationView from './ui-components/vaccination'\nimport TestingView from './ui-components/testing'\nimport ReportView from './ui-components/report'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\n\n\n\nfunction CovidApp() {\n\n  return (\n    <Router>\n      <Layout className=\"layout\">\n          <Switch>\n            <Route path=\"/\" exact component={VaccinationView}/>\n            <Route path=\"/testing\" exact component={TestingView}/> \n            <Route path=\"/report\" exact component={ReportView}/>\n          </Switch>\n      </Layout>\n    </Router>\n\n  );\n}\n\nexport default CovidApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport CovidApp from './CovidApp';\n\nReactDOM.render(<CovidApp />,document.getElementById('root'));"],"sourceRoot":""}